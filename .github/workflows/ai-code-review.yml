name: AI Code Review

on:
  pull_request:
    paths:
      - '**/*.kt'  # Kotlin 파일에 대해 실행

jobs:
  code-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # 리포지토리 코드 체크아웃

      - name: Set up Java (Kotlin uses JVM)
        uses: actions/setup-java@v2  # Java 17 설정
        with:
          java-version: '17'  # Java 17 버전 사용

      - name: Set up Kotlin
        uses: actions/setup-kotlin@v1  # Kotlin 설치
        with:
          kotlin-version: '1.8.0'  # Kotlin 버전 설정

      - name: Build with Gradle
        run: ./gradlew build  # Gradle 빌드 실행

      - name: Run Kotlin script for OpenAI code review
        run: |
          cat <<EOF > review_code.kt
          import okhttp3.*
          import java.io.IOException
          import org.json.JSONObject
          
          val openaiApiKey = System.getenv("OPENAI_API_KEY")  # GitHub Secrets에서 API 키 가져오기
          val client = OkHttpClient()
          
          // PR diff 파일 읽기
          val prDiff = java.io.File("pr.diff").readText()
          
          val mediaType = MediaType.parse("application/json")
          val body = RequestBody.create(mediaType, """
          {
            "model": "gpt-3.5-turbo",  # GPT-3.5 모델 사용 (무료 모델)
            "prompt": "Review this code for quality and suggest improvements:\n\n$prDiff",
            "max_tokens": 1000,
            "temperature": 0.5
          }
          """)
          
          val request = Request.Builder()
              .url("https://api.openai.com/v1/completions")
              .addHeader("Authorization", "Bearer $openaiApiKey")  # Authorization 헤더에 API 키 추가
              .post(body)
              .build()
          
          client.newCall(request).enqueue(object : Callback {
              override fun onFailure(call: Call, e: IOException) {
                  println("Request failed: ${e.message}")
              }
          
              override fun onResponse(call: Call, response: Response) {
                  if (response.isSuccessful) {
                      val responseBody = response.body()?.string()
                      val aiReview = responseBody?.let {
                          val jsonResponse = JSONObject(it)
                          jsonResponse.getJSONArray("choices")
                              .getJSONObject(0)
                              .getString("text")
                      }
                      println("AI Review: $aiReview")
                  } else {
                      println("Request failed with status code: ${response.code()}")
                  }
              }
          })
          EOF
          
          # Kotlin 스크립트 컴파일 및 실행
          kotlinc review_code.kt -include-runtime -d review_code.jar
          java -jar review_code.jar
